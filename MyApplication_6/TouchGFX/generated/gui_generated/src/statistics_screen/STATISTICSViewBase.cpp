/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/statistics_screen/STATISTICSViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

STATISTICSViewBase::STATISTICSViewBase() :
    buttonCallback(this, &STATISTICSViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    backround.setPosition(0, 0, 240, 320);
    backround.setColor(touchgfx::Color::getColorFromRGB(43, 43, 43));
    add(backround);

    Header_backround.setPosition(0, 0, 240, 52);
    Header_backround.setColor(touchgfx::Color::getColorFromRGB(56, 89, 255));
    Header_backround.setAlpha(17);
    add(Header_backround);

    Menu_Button.setXY(197, 7);
    Menu_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID));
    Menu_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_MAS3));
    Menu_Button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Menu_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Menu_Button.setAction(buttonCallback);
    add(Menu_Button);

    Header_Text.setXY(27, 13);
    Header_Text.setColor(touchgfx::Color::getColorFromRGB(153, 153, 153));
    Header_Text.setLinespacing(0);
    Header_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UR0F));
    add(Header_Text);

    Header_Text_1.setXY(38, 73);
    Header_Text_1.setColor(touchgfx::Color::getColorFromRGB(153, 153, 153));
    Header_Text_1.setLinespacing(0);
    Header_Text_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PS0O));
    add(Header_Text_1);

    Temperature_INSIDE.setXY(7, 124);
    Temperature_INSIDE.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    Temperature_INSIDE.setLabelText(touchgfx::TypedText(T___SINGLEUSE_QWXU));
    Temperature_INSIDE.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Temperature_INSIDE.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Temperature_INSIDE.setAction(buttonCallback);
    add(Temperature_INSIDE);

    Temperature_OUTSIDE.setXY(133, 124);
    Temperature_OUTSIDE.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    Temperature_OUTSIDE.setLabelText(touchgfx::TypedText(T___SINGLEUSE_VBA8));
    Temperature_OUTSIDE.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Temperature_OUTSIDE.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Temperature_OUTSIDE.setAction(buttonCallback);
    add(Temperature_OUTSIDE);

    Humidity.setXY(7, 178);
    Humidity.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    Humidity.setLabelText(touchgfx::TypedText(T___SINGLEUSE_EEN9));
    Humidity.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Humidity.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Humidity.setAction(buttonCallback);
    add(Humidity);

    Ambient_light.setXY(133, 178);
    Ambient_light.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    Ambient_light.setLabelText(touchgfx::TypedText(T___SINGLEUSE_7VEN));
    Ambient_light.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Ambient_light.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Ambient_light.setAction(buttonCallback);
    add(Ambient_light);

    Gas_sensor.setXY(7, 231);
    Gas_sensor.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    Gas_sensor.setLabelText(touchgfx::TypedText(T___SINGLEUSE_CONH));
    Gas_sensor.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Gas_sensor.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Gas_sensor.setAction(buttonCallback);
    add(Gas_sensor);

    Pressure.setXY(133, 231);
    Pressure.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    Pressure.setLabelText(touchgfx::TypedText(T___SINGLEUSE_DLEG));
    Pressure.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Pressure.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Pressure.setAction(buttonCallback);
    add(Pressure);

    Brightness_level.setPosition(0, 0, 240, 320);
    Brightness_level.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Brightness_level.setAlpha(0);
    add(Brightness_level);
}

STATISTICSViewBase::~STATISTICSViewBase()
{

}

void STATISTICSViewBase::setupScreen()
{

}

void STATISTICSViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Menu_Button)
    {
        //MenuPageNav
        //When Menu_Button clicked change screen to MenuDropdown_1
        //Go to MenuDropdown_1 with no screen transition
        application().gotoMenuDropdown_1ScreenNoTransition();
    }
    if (&src == &Temperature_INSIDE)
    {
        //TempINPageNav
        //When Temperature_INSIDE clicked change screen to Statistics_Temperature_Inside
        //Go to Statistics_Temperature_Inside with no screen transition
        application().gotoStatistics_Temperature_InsideScreenNoTransition();
    }
    if (&src == &Temperature_OUTSIDE)
    {
        //TempOUTPageNav
        //When Temperature_OUTSIDE clicked change screen to Statistics_Temperature_Outside
        //Go to Statistics_Temperature_Outside with no screen transition
        application().gotoStatistics_Temperature_OutsideScreenNoTransition();
    }
    if (&src == &Humidity)
    {
        //HumidityPageNav
        //When Humidity clicked change screen to Statistics_Humidity
        //Go to Statistics_Humidity with no screen transition
        application().gotoStatistics_HumidityScreenNoTransition();
    }
    if (&src == &Ambient_light)
    {
        //AmbientPageNav
        //When Ambient_light clicked change screen to Statistics_Ambient_1
        //Go to Statistics_Ambient_1 with no screen transition
        application().gotoStatistics_Ambient_1ScreenNoTransition();
    }
    if (&src == &Gas_sensor)
    {
        //GasPageNav
        //When Gas_sensor clicked change screen to Statistics_Gas_sensor
        //Go to Statistics_Gas_sensor with no screen transition
        application().gotoStatistics_Gas_sensorScreenNoTransition();
    }
    if (&src == &Pressure)
    {
        //PressurePageNav
        //When Pressure clicked change screen to Statistics_Presure
        //Go to Statistics_Presure with no screen transition
        application().gotoStatistics_PresureScreenNoTransition();
    }
}
