/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/defaultview_screen/DefaultViewViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

DefaultViewViewBase::DefaultViewViewBase() :
    buttonCallback(this, &DefaultViewViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    Backround.setPosition(0, 0, 240, 320);
    Backround.setColor(touchgfx::Color::getColorFromRGB(43, 43, 43));
    add(Backround);

    Menu_Button.setXY(197, 7);
    Menu_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID));
    Menu_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_68EU));
    Menu_Button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Menu_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Menu_Button.setAction(buttonCallback);
    add(Menu_Button);

    textArea1.setXY(27, 13);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(153, 153, 153));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6NB9));
    add(textArea1);

    SwipeContainer.setXY(0, 31);
    SwipeContainer.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_SMALL_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_SMALL_ON_NORMAL_ID));
    SwipeContainer.setPageIndicatorXY(84, 240);
    SwipeContainer.setSwipeCutoff(50);
    SwipeContainer.setEndSwipeElasticWidth(50);

    SwipeContainerHumidity.setPosition(0, 0, 240, 261);
    Humidity_Text.setXY(76, 30);
    Humidity_Text.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    Humidity_Text.setLinespacing(0);
    Humidity_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SC46));
    SwipeContainerHumidity.add(Humidity_Text);

    Humidity_Val.setXY(81, 109);
    Humidity_Val.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    Humidity_Val.setLinespacing(0);
    Unicode::snprintf(Humidity_ValBuffer, HUMIDITY_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TRUT).getText());
    Humidity_Val.setWildcard(Humidity_ValBuffer);
    Humidity_Val.resizeToCurrentText();
    Humidity_Val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ED8P));
    SwipeContainerHumidity.add(Humidity_Val);

    Statistics_Button_Humidity.setXY(5, 201);
    Statistics_Button_Humidity.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_STACKED_BAR_CHART_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    Statistics_Button_Humidity.setIconXY(5, 5);
    SwipeContainerHumidity.add(Statistics_Button_Humidity);

    SwipeContainer.add(SwipeContainerHumidity);

    SwipeContainerCarbon.setWidth(240);
    SwipeContainerCarbon.setHeight(261);
    Carbon_Text.setXY(32, 26);
    Carbon_Text.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    Carbon_Text.setLinespacing(0);
    Carbon_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XRTI));
    SwipeContainerCarbon.add(Carbon_Text);

    Carbon_Val.setXY(91, 64);
    Carbon_Val.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    Carbon_Val.setLinespacing(0);
    Unicode::snprintf(Carbon_ValBuffer, CARBON_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9KGC).getText());
    Carbon_Val.setWildcard(Carbon_ValBuffer);
    Carbon_Val.resizeToCurrentText();
    Carbon_Val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GP4Z));
    SwipeContainerCarbon.add(Carbon_Val);

    CarbonCirc_Val.setXY(65, 107);
    CarbonCirc_Val.setProgressIndicatorPosition(0, 0, 110, 110);
    CarbonCirc_Val.setRange(0, 100);
    CarbonCirc_Val.setCenter(55, 55);
    CarbonCirc_Val.setRadius(50);
    CarbonCirc_Val.setLineWidth(10);
    CarbonCirc_Val.setStartEndAngle(-90, 210);
    CarbonCirc_Val.setCapPrecision(180);
    CarbonCirc_Val.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_CIRCLEPROGRESS_BACKGROUNDS_SMALL_ID));
    CarbonCirc_ValPainter.setColor(touchgfx::Color::getColorFromRGB(0, 240, 255));
    CarbonCirc_Val.setPainter(CarbonCirc_ValPainter);
    CarbonCirc_Val.setValue(60);
    SwipeContainerCarbon.add(CarbonCirc_Val);

    Statistics_Button_Carbon.setXY(5, 201);
    Statistics_Button_Carbon.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_STACKED_BAR_CHART_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    Statistics_Button_Carbon.setIconXY(5, 5);
    Statistics_Button_Carbon.setAction(buttonCallback);
    SwipeContainerCarbon.add(Statistics_Button_Carbon);

    SwipeContainer.add(SwipeContainerCarbon);

    SwipeContainerPressure_1.setPosition(0, 0, 240, 261);
    Presure_Text.setXY(55, 30);
    Presure_Text.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    Presure_Text.setLinespacing(0);
    Presure_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QJ73));
    SwipeContainerPressure_1.add(Presure_Text);

    Presure_Val.setXY(83, 109);
    Presure_Val.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    Presure_Val.setLinespacing(0);
    Unicode::snprintf(Presure_ValBuffer, PRESURE_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JVDX).getText());
    Presure_Val.setWildcard(Presure_ValBuffer);
    Presure_Val.resizeToCurrentText();
    Presure_Val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MJ6R));
    SwipeContainerPressure_1.add(Presure_Val);

    Statistics_Button_Presure.setXY(5, 201);
    Statistics_Button_Presure.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_STACKED_BAR_CHART_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    Statistics_Button_Presure.setIconXY(5, 5);
    SwipeContainerPressure_1.add(Statistics_Button_Presure);

    SwipeContainer.add(SwipeContainerPressure_1);

    SwipeContainerAmbient_1.setPosition(0, 0, 240, 261);
    Statistics_Button_Ambient.setXY(5, 201);
    Statistics_Button_Ambient.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_STACKED_BAR_CHART_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    Statistics_Button_Ambient.setIconXY(5, 5);
    SwipeContainerAmbient_1.add(Statistics_Button_Ambient);

    Ambient_Text.setXY(55, 30);
    Ambient_Text.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    Ambient_Text.setLinespacing(0);
    Ambient_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VIA7));
    SwipeContainerAmbient_1.add(Ambient_Text);

    Ambient_Val.setXY(81, 109);
    Ambient_Val.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    Ambient_Val.setLinespacing(0);
    Unicode::snprintf(Ambient_ValBuffer, AMBIENT_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VYLX).getText());
    Ambient_Val.setWildcard(Ambient_ValBuffer);
    Ambient_Val.resizeToCurrentText();
    Ambient_Val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9KQX));
    SwipeContainerAmbient_1.add(Ambient_Val);

    SwipeContainer.add(SwipeContainerAmbient_1);

    SwipeContainerTemperature_Inside.setPosition(0, 0, 240, 261);
    TempIn_Val.setXY(81, 109);
    TempIn_Val.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    TempIn_Val.setLinespacing(0);
    Unicode::snprintf(TempIn_ValBuffer, TEMPIN_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E5QY).getText());
    TempIn_Val.setWildcard(TempIn_ValBuffer);
    TempIn_Val.resizeToCurrentText();
    TempIn_Val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BF3J));
    SwipeContainerTemperature_Inside.add(TempIn_Val);

    TempIn_Text.setXY(55, 30);
    TempIn_Text.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    TempIn_Text.setLinespacing(0);
    TempIn_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NIUA));
    SwipeContainerTemperature_Inside.add(TempIn_Text);

    Statistics_Button_TempIn.setXY(5, 201);
    Statistics_Button_TempIn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_STACKED_BAR_CHART_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    Statistics_Button_TempIn.setIconXY(5, 5);
    SwipeContainerTemperature_Inside.add(Statistics_Button_TempIn);

    SwipeContainer.add(SwipeContainerTemperature_Inside);

    SwipeContainerTemperature_Outside.setPosition(0, 0, 240, 261);
    TempOut_Val.setXY(81, 109);
    TempOut_Val.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    TempOut_Val.setLinespacing(0);
    Unicode::snprintf(TempOut_ValBuffer, TEMPOUT_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IV5N).getText());
    TempOut_Val.setWildcard(TempOut_ValBuffer);
    TempOut_Val.resizeToCurrentText();
    TempOut_Val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7E1H));
    SwipeContainerTemperature_Outside.add(TempOut_Val);

    TempOut_Text.setXY(55, 30);
    TempOut_Text.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    TempOut_Text.setLinespacing(0);
    TempOut_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZFWW));
    SwipeContainerTemperature_Outside.add(TempOut_Text);

    Statistics_Button_TempOut.setXY(5, 201);
    Statistics_Button_TempOut.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_STACKED_BAR_CHART_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    Statistics_Button_TempOut.setIconXY(5, 5);
    SwipeContainerTemperature_Outside.add(Statistics_Button_TempOut);

    SwipeContainer.add(SwipeContainerTemperature_Outside);

    SwipeContainer.setSelectedPage(1);
    add(SwipeContainer);

    digitalClock1.setPosition(9, 292, 98, 28);
    digitalClock1.setColor(touchgfx::Color::getColorFromRGB(0, 234, 255));
    digitalClock1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UQLB));
    digitalClock1.displayLeadingZeroForHourIndicator(true);
    digitalClock1.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    digitalClock1.setTime24Hour(10, 10, 0);
    digitalClock1.setVisible(false);
    add(digitalClock1);

    Header.setPosition(0, 0, 240, 52);
    Header.setColor(touchgfx::Color::getColorFromRGB(56, 89, 255));
    Header.setAlpha(17);
    add(Header);

    Footer.setPosition(-1, 292, 241, 32);
    Footer.setColor(touchgfx::Color::getColorFromRGB(56, 89, 255));
    Footer.setAlpha(17);
    add(Footer);

    Alert_cover.setPosition(0, 0, 250, 320);
    Alert_cover.setVisible(false);
    Backround_1.setPosition(0, 0, 240, 320);
    Backround_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Backround_1.setAlpha(150);
    Alert_cover.add(Backround_1);

    Error_msg_backround.setPosition(14, 164, 215, 63);
    Error_msg_backround.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Error_msg_backround.setAlpha(150);
    Alert_cover.add(Error_msg_backround);

    Error.setXY(84, 70);
    Error.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ALERT_ERROR_70_70_FF0000_SVG_ID));
    Alert_cover.add(Error);

    Error_code.setXY(47, 40);
    Error_code.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    Error_code.setLinespacing(0);
    Unicode::snprintf(Error_codeBuffer, ERROR_CODE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_MEFF).getText());
    Error_code.setWildcard(Error_codeBuffer);
    Error_code.resizeToCurrentText();
    Error_code.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HAUQ));
    Alert_cover.add(Error_code);

    Snooze_button.setXY(71, 253);
    Snooze_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    Snooze_button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_TTSL));
    Snooze_button.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Snooze_button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Snooze_button.setAction(buttonCallback);
    Alert_cover.add(Snooze_button);

    Error_text.setXY(21, 169);
    Error_text.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    Error_text.setLinespacing(0);
    Unicode::snprintf(Error_textBuffer, ERROR_TEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VN7N).getText());
    Error_text.setWildcard(Error_textBuffer);
    Error_text.resizeToCurrentText();
    Error_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_595W));
    Alert_cover.add(Error_text);

    add(Alert_cover);

    Brightness_level.setPosition(0, 4, 240, 320);
    Brightness_level.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Brightness_level.setAlpha(0);
    add(Brightness_level);
}

DefaultViewViewBase::~DefaultViewViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void DefaultViewViewBase::setupScreen()
{

}

void DefaultViewViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Menu_Button)
    {
        //DropDownFunc
        //When Menu_Button clicked change screen to MenuDropdown_1
        //Go to MenuDropdown_1 with no screen transition
        application().gotoMenuDropdown_1ScreenNoTransition();
    }
    if (&src == &Statistics_Button_Ambient)
    {
        //StatisticsNav_Ambient
        //When Statistics_Button_Ambient clicked change screen to Statistics_Ambient_1
        //Go to Statistics_Ambient_1 with no screen transition
        application().gotoStatistics_Ambient_1ScreenNoTransition();
    }
    if (&src == &Statistics_Button_Humidity)
    {
        //StatisticsNav_Humidity
        //When Statistics_Button_Humidity clicked change screen to Statistics_Humidity
        //Go to Statistics_Humidity with no screen transition
        application().gotoStatistics_HumidityScreenNoTransition();
    }
    if (&src == &Statistics_Button_TempIn)
    {
        //StatisticsNav_TempIn
        //When Statistics_Button_TempIn clicked change screen to Statistics_Temperature_Inside
        //Go to Statistics_Temperature_Inside with no screen transition
        application().gotoStatistics_Temperature_InsideScreenNoTransition();
    }
    if (&src == &Statistics_Button_Presure)
    {
        //StatisticsNav_presure
        //When Statistics_Button_Presure clicked change screen to Statistics_Presure
        //Go to Statistics_Presure with no screen transition
        application().gotoStatistics_PresureScreenNoTransition();
    }
    if (&src == &Statistics_Button_Carbon)
    {
        //StatisticsNav_Carbon
        //When Statistics_Button_Carbon clicked change screen to Statistics_Gas_sensor
        //Go to Statistics_Gas_sensor with no screen transition
        application().gotoStatistics_Gas_sensorScreenNoTransition();
    }
    if (&src == &Statistics_Button_TempOut)
    {
        //StatisticNav_TempOut
        //When Statistics_Button_TempOut clicked change screen to Statistics_Temperature_Outside
        //Go to Statistics_Temperature_Outside with no screen transition
        application().gotoStatistics_Temperature_OutsideScreenNoTransition();
    }
    if (&src == &Snooze_button)
    {
        //Alert_cover_hide
        //When Snooze_button clicked hide Alert_cover
        //Hide Alert_cover
        Alert_cover.setVisible(false);
        Alert_cover.invalidate();
        //Snooze_btn_pressed
        //When Snooze_button clicked call virtual function
        //Call Snooze_btn_pressed
        Snooze_btn_pressed();
    }
}

void DefaultViewViewBase::handleTickEvent()
{
    //Interaction1
    //When every N tick call virtual function
    //Call function1
    function1();
}
