/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/statistics_humidity_screen/Statistics_HumidityViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Statistics_HumidityViewBase::Statistics_HumidityViewBase() :
    buttonCallback(this, &Statistics_HumidityViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    backround.setPosition(0, 0, 240, 320);
    backround.setColor(touchgfx::Color::getColorFromRGB(43, 43, 43));
    add(backround);

    Header_backround.setPosition(0, 0, 240, 52);
    Header_backround.setColor(touchgfx::Color::getColorFromRGB(56, 89, 255));
    Header_backround.setAlpha(17);
    add(Header_backround);

    Menu_Button.setXY(197, 7);
    Menu_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID));
    Menu_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_OL7Y));
    Menu_Button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Menu_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Menu_Button.setAction(buttonCallback);
    add(Menu_Button);

    Header_Text.setXY(27, 13);
    Header_Text.setColor(touchgfx::Color::getColorFromRGB(153, 153, 153));
    Header_Text.setLinespacing(0);
    Header_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XEYY));
    add(Header_Text);

    Humidity_sensor_text.setXY(46, 63);
    Humidity_sensor_text.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    Humidity_sensor_text.setLinespacing(0);
    Humidity_sensor_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DJOK));
    add(Humidity_sensor_text);

    Average_Day_val.setXY(6, 236);
    Average_Day_val.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    Average_Day_val.setLinespacing(0);
    Average_Day_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2IJD));
    add(Average_Day_val);

    Average_Week_val.setXY(6, 260);
    Average_Week_val.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    Average_Week_val.setLinespacing(0);
    Average_Week_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GEGK));
    add(Average_Week_val);

    Average_Month_val.setXY(6, 284);
    Average_Month_val.setColor(touchgfx::Color::getColorFromRGB(0, 247, 255));
    Average_Month_val.setLinespacing(0);
    Average_Month_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1BWB));
    add(Average_Month_val);

    Graphic_Humidity_Inside.setPosition(-2, 94, 235, 142);
    Graphic_Humidity_Inside.setScaleX(1);
    Graphic_Humidity_Inside.setScaleY(1);
    Graphic_Humidity_Inside.setGraphAreaMargin(0, 15, 0, 16);
    Graphic_Humidity_Inside.setGraphAreaPadding(0, 9, 12, -1);
    Graphic_Humidity_Inside.setGraphRangeX(0, 24);
    Graphic_Humidity_Inside.setGraphRangeY(20, 70);
    Graphic_Humidity_InsideMajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    Graphic_Humidity_InsideMajorYAxisGrid.setInterval(4);
    Graphic_Humidity_InsideMajorYAxisGrid.setLineWidth(1);
    Graphic_Humidity_InsideMajorYAxisGrid.setScale(1);
    Graphic_Humidity_Inside.addGraphElement(Graphic_Humidity_InsideMajorYAxisGrid);

    Graphic_Humidity_InsideMajorXAxisLabel.setInterval(2);
    Graphic_Humidity_InsideMajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_ZVPC));
    Graphic_Humidity_InsideMajorXAxisLabel.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    Graphic_Humidity_InsideMajorXAxisLabel.setScale(1);
    Graphic_Humidity_Inside.addBottomElement(Graphic_Humidity_InsideMajorXAxisLabel);

    Graphic_Humidity_InsideMajorYAxisLabel.setInterval(30);
    Graphic_Humidity_InsideMajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_73V5));
    Graphic_Humidity_InsideMajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    Graphic_Humidity_InsideMajorYAxisLabel.setScale(1);
    Graphic_Humidity_Inside.addLeftElement(Graphic_Humidity_InsideMajorYAxisLabel);

    Graphic_Humidity_InsideHistogram1.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    Graphic_Humidity_InsideHistogram1.setBarWidth(4);
    Graphic_Humidity_InsideHistogram1.setBaseline(0);
    Graphic_Humidity_Inside.addGraphElement(Graphic_Humidity_InsideHistogram1);


    add(Graphic_Humidity_Inside);

    Brightness_level.setPosition(0, 0, 240, 320);
    Brightness_level.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Brightness_level.setAlpha(0);
    add(Brightness_level);
}

Statistics_HumidityViewBase::~Statistics_HumidityViewBase()
{

}

void Statistics_HumidityViewBase::setupScreen()
{

}

void Statistics_HumidityViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Menu_Button)
    {
        //MenuDropdown
        //When Menu_Button clicked change screen to STATISTICS
        //Go to STATISTICS with no screen transition
        application().gotoSTATISTICSScreenNoTransition();
    }
}
