/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ALARM_SETTINGSVIEWBASE_HPP
#define ALARM_SETTINGSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/alarm_settings_screen/Alarm_SettingsPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Alarm_SettingsViewBase : public touchgfx::View<Alarm_SettingsPresenter>
{
public:
    Alarm_SettingsViewBase();
    virtual ~Alarm_SettingsViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void btn_Permission_ON()
    {
        // Override and implement this function in Alarm_Settings
    }
    virtual void btn_Permission_OFF()
    {
        // Override and implement this function in Alarm_Settings
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box backround;
    touchgfx::Box Footer;
    touchgfx::Box Header_backround;
    touchgfx::ButtonWithLabel Menu_Button;
    touchgfx::TextArea Header_Text;
    touchgfx::TextArea System_Allarm_Text;
    touchgfx::TextArea Alarm_confirmation_text;
    touchgfx::ButtonWithIcon Permission_ON;
    touchgfx::ButtonWithIcon Permission_OFF;
    touchgfx::Box box1;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::Box Brightness_level;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Alarm_SettingsViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // ALARM_SETTINGSVIEWBASE_HPP
