/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/menudropdown_screen/MenuDropdownViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MenuDropdownViewBase::MenuDropdownViewBase() :
    updateItemCallback(this, &MenuDropdownViewBase::updateItemCallbackHandler),
    buttonCallback(this, &MenuDropdownViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    Backround.setPosition(0, 0, 240, 320);
    Backround.setColor(touchgfx::Color::getColorFromRGB(43, 43, 43));
    add(Backround);

    Menu_Button.setXY(197, 7);
    Menu_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID));
    Menu_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_HN5H));
    Menu_Button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Menu_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Menu_Button.setAction(buttonCallback);
    add(Menu_Button);

    Header_Text.setXY(20, 15);
    Header_Text.setColor(touchgfx::Color::getColorFromRGB(128, 128, 128));
    Header_Text.setLinespacing(0);
    Header_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MUN4));
    add(Header_Text);

    Scroll_Elements.setPosition(0, 51, 245, 295);
    Scroll_Elements.setHorizontal(false);
    Scroll_Elements.setCircular(false);
    Scroll_Elements.setEasingEquation(touchgfx::EasingEquations::linearEaseOut);
    Scroll_Elements.setSwipeAcceleration(10);
    Scroll_Elements.setDragAcceleration(10);
    Scroll_Elements.setNumberOfItems(10);
    Scroll_Elements.setPadding(0, 0);
    Scroll_Elements.setSnapping(false);
    Scroll_Elements.setOvershootPercentage(75);
    Scroll_Elements.setDrawableSize(430, 0);
    Scroll_Elements.setDrawables(Scroll_ElementsListItems, updateItemCallback);
    add(Scroll_Elements);

    Screen_Brightness.setPosition(0, 0, 240, 320);
    Screen_Brightness.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Screen_Brightness.setAlpha(0);
    add(Screen_Brightness);
}

MenuDropdownViewBase::~MenuDropdownViewBase()
{

}

void MenuDropdownViewBase::setupScreen()
{
    Scroll_Elements.initialize();
    for (int i = 0; i < Scroll_ElementsListItems.getNumberOfDrawables(); i++)
    {
        Scroll_ElementsListItems[i].initialize();
    }
}

void MenuDropdownViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Menu_Button)
    {
        //Menu_button
        //When Menu_Button clicked change screen to DefaultView
        //Go to DefaultView with no screen transition
        application().gotoDefaultViewScreenNoTransition();
    }
}

void MenuDropdownViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &Scroll_ElementsListItems)
    {
        Scroll_ElementsUpdateItem(Scroll_ElementsListItems[containerIndex], itemIndex);
    }
}
